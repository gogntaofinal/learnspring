### set log levels ###  
log4j.rootLogger = error,stdout,debug,warn,error
logs.rootPath = C://logs/appframe
#log4j.logger.org.springframework=OFF  

log4j.appender.stdout = org.apache.log4j.ConsoleAppender  
log4j.appender.stdout.Target = System.out  
log4j.appender.stdout.layout = org.apache.log4j.PatternLayout  
log4j.appender.stdout.layout.ConversionPattern =%d{yyyy-MM-dd HH:mm:ss,SSS} method:%l%n%m%n  

###显示SQL语句部分
log4j.logger.org.gongtao.mapper=DEBUG,org.gongtao.mapper
log4j.appender.org.gongtao.mapper.File = ${logs.rootPath}/mybatis
log4j.appender.org.gongtao.mapper.Encoding = UTF-8
log4j.additivity.org.gongtao.mapper=true
log4j.appender.org.gongtao.mapper.DatePattern='.'yyyy-MM-dd
#log4j.appender.org.gongtao.mapper.MaxFileSize=10MB
log4j.appender.org.gongtao.mapper=org.apache.log4j.DailyRollingFileAppender
log4j.appender.org.gongtao.mapper.layout=org.apache.log4j.PatternLayout
log4j.appender.org.gongtao.mapper.layout.ConversionPattern=%-d{yyyy-MM-dd HH:mm:ss}-%p-%l:%m%n

#总日志打印到log
log4j.appender.debug = org.apache.log4j.DailyRollingFileAppender  
log4j.appender.debug.File = ${logs.rootPath}/log 
#Append = FALSE:默认值true,将消息追加到指定文件中，false指将消息覆盖指定的文件内容
log4j.appender.debug.Append = true 
#在日志文件到达该大小时,将会自动滚动.如:log4j.log.1
#log4j.appender.debug.MaxFileSize=10MB
#滚动的最大文件数
#log4j.appender.D.MaxBackupIndex=10
#DatePattern='.'yyyy-ww:每周滚动一次文件,即每周产生一个新的文件。还可以按用以下参数:
#              '.'yyyy-MM:每月
#              '.'yyyy-ww:每周
#              '.'yyyy-MM-dd:每天
#              '.'yyyy-MM-dd-a:每天两次
#              '.'yyyy-MM-dd-HH:每小时
#              '.'yyyy-MM-dd-HH-mm:每分钟
log4j.appender.debug.DatePattern='.'yyyy-MM-dd
#指定日志消息的输出最低层次
log4j.appender.debug.Threshold =  DEBUG  
log4j.appender.debug.Encoding = UTF-8
#默认值true,将消息追加到指定文件中，false指将消息覆盖指定的文件内容
#下面是对某个类进行单独配置的日志邀请,用debug级别来控制这个类是否输出日志
#log4j.logger.com.qsoft.YYService=debug
#org.apache.log4j.HTMLLayout(以HTML表格形式布局)
#org.apache.log4j.PatternLayout(可以灵活地指定布局模式)
#org.apache.log4j.SimpleLayout(包含日志信息的级别和信息字符串)
#org.apache.log4j.TTCCLayout(包含日志产生的时间、线程、类别等等信息)
#org.apache.log4j.xml.XMLLayout(以XML形式布局)
log4j.appender.debug.layout = org.apache.log4j.PatternLayout  
log4j.appender.debug.layout.ConversionPattern =%-d{yyyy-MM-dd HH:mm:ss}-%p-%l:%m%n  

#warn日志
log4j.appender.warn = org.apache.log4j.DailyRollingFileAppender  
log4j.appender.warn.File = ${logs.rootPath}/warn 
log4j.appender.warn.Append = true  
log4j.appender.warn.DatePattern='.'yyyy-MM-dd
#log4j.appender.warn.MaxFileSize=10MB
log4j.appender.warn.Threshold = WARN  
log4j.appender.warn.Encoding = UTF-8
log4j.appender.warn.layout = org.apache.log4j.PatternLayout  
log4j.appender.warn.layout.ConversionPattern =%-d{yyyy-MM-dd HH:mm:ss}-%p-%l:%m%n

#error日志
log4j.appender.error = org.apache.log4j.DailyRollingFileAppender  
log4j.appender.error.File = ${logs.rootPath}/error 
log4j.appender.error.Append = true  
#log4j.appender.error.MaxFileSize=10MB
log4j.appender.error.DatePattern='.'yyyy-MM-dd
log4j.appender.error.Threshold = ERROR  
log4j.appender.error.Encoding = UTF-8
log4j.appender.error.layout = org.apache.log4j.PatternLayout  
log4j.appender.error.layout.ConversionPattern =%-d{yyyy-MM-dd HH:mm:ss}-%p-%l:%m%n

#存储指定包日志org.gongtao.controller
log4j.logger.org.gongtao.controller=DEBUG,org.gongtao.controller
log4j.appender.org.gongtao.controller.Encoding = UTF-8
log4j.additivity.org.gongtao.controller=true
log4j.appender.org.gongtao.controller.DatePattern='.'yyyy-MM-dd
#log4j.appender.org.gongtao.controller.MaxFileSize=10MB
log4j.appender.org.gongtao.controller=org.apache.log4j.DailyRollingFileAppender
log4j.appender.org.gongtao.controller.File= ${logs.rootPath}/controller
log4j.appender.org.gongtao.controller.layout=org.apache.log4j.PatternLayout
log4j.appender.org.gongtao.controller.layout.ConversionPattern=%-d{yyyy-MM-dd HH:mm:ss}-%p-%l:%m%n

#自定义日志
log4j.logger.frame= DEBUG,error,frame
log4j.appender.frame.Encoding = UTF-8
#log4j.appender.frame.MaxFileSize=10MB
log4j.appender.frame.DatePattern='.'yyyy-MM-dd
#additivity的作用在于 children-logger是否使用 rootLogger的配置,默认true
log4j.additivity.frame=true
log4j.appender.frame=org.apache.log4j.DailyRollingFileAppender
log4j.appender.frame.File= ${logs.rootPath}/frame
log4j.appender.frame.layout=org.apache.log4j.PatternLayout
log4j.appender.frame.layout.ConversionPattern=%-d{yyyy-MM-dd HH:mm:ss}-%p-%l:%m%n

### 输出目的如下 :  
### 1)org.apache.log4j.ConsoleAppender 控制台   
### 2)org.apache.log4j.FileAppender 文件   
### 3)org.apache.log4j.DailyRollingFileAppender 每天产生一个日志文件    
### 4)org.apache.log4j.RollingFileAppender （文件大小到达指定尺寸的时候产生一个新的文件）  
### 5)org.apache.log4j.WriterAppender （将日志信息以流格式发送到任意指定的地方）  
### 6)org.apache.log4j.net.SMTPAppender 邮件  
### 7)org.apache.log4j.jdbc.JDBCAppender 数据库   
### 8)其他如：GUI组件、甚至是套接口服务器、NT的事件记录器、UNIX Syslog守护进程等   
### 如下:指定输出到控制台   
###log4j.appender.stdout=org.apache.log4j.ConsoleAppender    