<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
                           http://www.springframework.org/schema/mvc
                           http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context-3.2.xsd
                           http://www.springframework.org/schema/aop
                           http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">

    <!-- 引入配置文件 -->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations" value="classpath:mysql.properties"/>
    </bean>
    <!-- 配置数据源，未使用连接池，适用于开发环境，不建议用于生产环境 -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${driver}"/>
        <property name="url" value="${master.url}"/>
        <property name="username" value="${master.username}"/>
        <property name="password" value="${master.password}"/>
    </bean>
    <!--&lt;!&ndash; 配置sql会话工程 &ndash;&gt;-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    <property name="dataSource" ref="dataSource" />
    <!--&lt;!&ndash; Directly specify the location of the MyBatis mapper xml file. This-->
    <!--is NOT required when using MapperScannerConfigurer or-->
    <!--MapperFactoryBean; they will load the xml automatically if it is-->
    <!--in the same classpath location as the DAO interface. Rather than-->
    <!--directly referencing the xml files, the 'configLocation' property-->
    <!--could also be used to specify the location of a MyBatis config-->
    <!--file. This config file could, in turn, contain &ltmapper&gt-->
    <!--elements that point to the correct mapper xml files.-->
    <!--&ndash;&gt;-->
     <!--<property name="mapperLocations" value="classpath:org/gongtao/mapper/*.xml" />-->
    <property name="mapperLocations">
        <array>
            <value>classpath:org/gongtao/mapper/*.xml</value>
        </array>
    </property>

    </bean>
    <!-- 用于注解 -->
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"/>
    <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping"/>

    <!-- 配置映射对象 -->
    <bean id="userMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="mapperInterface" value="org.gongtao.mapper.UserMapper" />
        <property name="sqlSessionFactory" ref="sqlSessionFactory" />
    </bean>

    <bean id="departmentMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="mapperInterface" value="org.gongtao.mapper.DepartmentMapper" />
        <property name="sqlSessionFactory" ref="sqlSessionFactory" />
    </bean>

     <!--MyBatis-Spring will create a proxy for the userMapper bean -->
    <!--<bean id="deviceService" class="org.gongtao.service.HelloDeviceImpl">-->
        <!--&lt;!&ndash; constructor-arg ref="cityMapper" / &ndash;&gt;-->
        <!--<property name="deviceMapper" ref="deviceMapper"/>-->
    <!--</bean>-->
    <!--<bean id="loginService" class = "org.gongtao.serviceImpl.LoginServiceImpl">-->
        <!--<property name="" ref="loginService"></property>-->
    <!--</bean>-->
    <bean id="loginService" class="org.gongtao.serviceImpl.LoginServiceImpl">
    </bean>
    <!-- 组件扫描器扫描这一层组要扫描处理器 -->
    <!-- 容易出错的地方是base-package配错，注解不发生作用 -->
    <context:component-scan base-package="org.gongtao.*"></context:component-scan>
    <!--<context:component-scan base-package="org.gongtao.serviceImpl"></context:component-scan>-->

    <!-- 配置注解的映射器和适配器以及其他配置 -->
    <mvc:annotation-driven></mvc:annotation-driven>
    <mvc:default-servlet-handler/>
    <mvc:annotation-driven>
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter"/>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
        </mvc:message-converters>
    </mvc:annotation-driven>

</beans>
